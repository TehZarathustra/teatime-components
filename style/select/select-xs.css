@value size-xs, line-xs from '../font.css';

.wrapper
{
  composes: wrapper from './select.css';

  font-size: size-xs;
  line-height: line-xs;
}

.native
{
  composes: native from './select.css';
}

.control
{
  composes: control from '../button/button-normal-xs.css';
  composes: control from './select.css';

  padding-right: 25px;

  text-align: left;
}

.control:before
{
  right: 9px;

  width: 9px;
  height: 5px;
  margin: -2px 0 0;

  background: url(arrow-xs.svg) 0 0 no-repeat;
}

.label
{
  composes: label from './select.css';

  font-size: size-xs;
  line-height: line-xs;
}

.input
{
  composes: input from './select.css';

  padding: 0 25px 0 10px;

  font-size: size-xs;
  line-height: line-xs;
}

.menu
{
  composes: menu from '../menu/menu-xs.css';
  composes: menu from './select.css';

  max-height: 198px;
}

.item
{
  composes: item from '../menu/menu-xs.css';
  composes: item from './select.css';
}

.empty
{
  composes: empty from './select.css';

  padding: 0 10px;

  font-size: size-xs;
  line-height: line-xs;
}

/* mixins */

.isFixedWrapper
{
  composes: isFixedWrapper from './select.css';
}

.isClosedControl
{
  composes: isClosedControl from './select.css';
}

.isOpenedControl
{
  composes: isOpenedControl from './select.css';
}

.isClosedMenu
{
  composes: isClosedMenu from './select.css';
}

.isOpenedMenu
{
  composes: isOpenedMenu from './select.css';
}

.isFixedMenu
{
  composes: isFixedMenu from './select.css';
}

.isFixedItem
{
  composes: isFixedItem from './select.css';
}

.isFocusedItem
{
  composes: isFocusedItem from './select.css';
}

.isSelectedItem
{
  composes: isSelectedItem from './select.css';

  background-image: url(../check/tick-s.svg);
  background-position: 10px 50%;
  background-size: 13px;
}
