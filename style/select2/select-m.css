@value size-m, line-m from '../font.css';

.wrapper
{
  composes: wrapper from './select.css';
}

.control
{
  composes: control from '../button/button-normal-m.css';
  composes: control from './select.css';

  height: line-m;
  padding-right: 29px;

  text-align: left;
}

.control:after
{
  right: 12px;

  width: 11px;
  height: 6px;
  margin: -3px 0 0;

  background: url(arrow-s.svg) 0 0 no-repeat;
}

.input
{
  composes: input from './select.css';

  padding: 0 29px 0 15px;

  font-size: size-m;
  line-height: line-m;
}

.menu
{
  composes: menu from '../menu/menu-m.css';
  composes: menu from './select.css';
}

.item
{
  composes: item from '../menu/menu-m.css';
  composes: item from './select.css';
}

.empty
{
  composes: empty from './select.css';

  padding: 0 15px;

  font-size: size-m;
  line-height: line-m;
}

/* mixins */

.isClosedControl
{
  composes: isClosedControl from './select.css';
}

.isOpenedControl
{
  composes: isOpenedControl from './select.css';
}

.isClosedMenu
{
  composes: isClosedMenu from './select.css';
}

.isOpenedMenu
{
  composes: isOpenedMenu from './select.css';
}

.isFixedMenu
{
  composes: isFixedMenu from './select.css';
}

.isFixedItem
{
  composes: isFixedItem from './select.css';
}

.isFocusedItem
{
  composes: isFocusedItem from './select.css';
}

.isSelectedItem
{
  composes: isSelectedItem from './select.css';

  background-image: url(../check/tick-m.svg);
  background-position: 13px 50%;
  background-size: 15px;
}
