#!/bin/sh

source .script/status

case "$1" in
  major|x..)
    versionType=major;;

  minor|.x.)
    versionType=minor;;

  patch|..x)
    versionType=patch;;

  *)
    echo 'choose the version to deploy'
    echo 'deploy major|minor|patch|x..|.x.|..x'
    exit;;
esac

# check code
npm run lint || exit 1
npm test     || exit 1

# update components index
source .script/index
# update package version
npm --no-git-tag-version version "$versionType"
npm run dist || exit 1
npm run docs || exit 1

git add dist/.
git add docs/.
git add index.js
git add package.json

version=`sed -n '/version/p' package.json|cut -d'"' -f4`

git commit -m "version $version"
git tag "$version"

# compile
cli=node_modules/.bin

babel() {
  ${cli}/babel $1 --out-dir ${2:-$1} || exit 1
}

prefixer() {
  for css in `find $1 -name '*.css'`
  do
    ${cli}/postcss --config .config/postcss.config.js --output "$css" "$css" || exit 1
  done
}

babel component
babel decorator
babel lib
babel view

prefixer style

# npm publish --tag beta
npm publish
git reset HEAD --hard
